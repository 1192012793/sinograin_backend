<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.toughguy.sinograin.model.barn.Handover">

	<insert id="save" parameterType="Handover" keyProperty="id" useGeneratedKeys="true">
		insert into barn_handover (guid, createTime,updateTime,sampleIds,sampleNums,checkeds,name,remark,userId,sampleAdmin,receiptor) 
		values (#{guid}, #{createTime},#{updateTime},#{sampleIds},#{sampleNums},#{checkeds},#{name},#{remark},#{userId},#{sampleAdmin},#{receiptor})
	</insert>
	
	<!-- 删除某个交接单 -->
	<delete id="delete" parameterType="int" >
		delete from barn_handover where id = #{id}
	</delete>
	
	<!-- 删除交接单集 -->
	<delete id="deleteByIDs" parameterType="List">
		delete from barn_handover where id in
		<foreach collection="list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	
	<!-- 查询某个交接单  -->
	<select id="find" parameterType="int" resultType="Handover">
		select DISTINCT bs.sort,bh.* from barn_handover bh 
		LEFT JOIN barn_sample bs ON FIND_IN_SET(bs.id,bh.sampleIds) where bh.id = #{id} ORDER BY bs.createTime desc
	
	</select>
	
	<!-- 查询全部交接单  -->
	<select id="findAll" resultType="Handover" parameterType="Map">
		select * from barn_handover
		<include refid="paramsSQL"/>
	</select>
	<!-- 根据检测编号查询  -->
	<select id="findsampleNums" resultType="Handover" parameterType="String">
		select * from barn_handover bh WHERE FIND_IN_SET(#{sampleNums},bh.sampleNums) 
	</select>
	<!-- 根据检验项目查询样品 -->
	<select id="findSampleByCheckPoint" resultType="Sample" parameterType="int">
		select distinct bs.* from barn_handover bh LEFT JOIN barn_sample bs ON bh.sampleIds = bs.id where FIND_IN_SET(#{checkPoint},bh.checkeds) 
	</select>
	<!-- 根据样品id查询检验项目 -->
	<select id="findCheckedBySampleId" resultType="Handover" parameterType="int">
		select * from barn_handover bh LEFT JOIN barn_sample bs ON bh.sampleIds = bs.id where FIND_IN_SET(#{sampleId},bh.sampleIds) ORDER BY bh.createTime desc LIMIT 1
	</select>
	<!-- 分页查询交接单  -->
	<select id="findPaginated" resultType="Handover" parameterType="Map">
		select DISTINCT bs.sort,bh.* from barn_handover bh LEFT JOIN barn_sample bs ON FIND_IN_SET(bs.id,bh.sampleIds)
		<include refid="paramsSQL"/>
		ORDER BY createTime desc  limit #{offset}, #{limit}
	</select>
	
	<select id="getTotalOfItems" parameterType="Map" resultType="int">
		select count(*) from barn_handover 
		<include refid="paramsSQL"/>
	</select>
	
	<!-- 修改某条交接单  -->
	<update id="update" parameterType="Handover">
		update barn_handover
		<set>
			<if test="sampleIds != null and sampleIds != ''">sampleIds = #{sampleIds},</if>
			<if test="sampleNums != null and sampleNums != ''">sampleNums = #{sampleNums},</if>
			<if test="updateTime != null">updateTime = #{updateTime},</if>
			<if test="checkeds != null and checkeds != ''">checkeds = #{checkeds},</if>
			<if test="name != null and name != ''">name = #{name},</if>
			<if test="remark != null and remark != ''">remark = #{remark},</if>
			<if test="userId != null and userId != ''">userId = #{userId},</if>
			<if test="sampleAdmin != null and sampleAdmin != ''">sampleAdmin = #{sampleAdmin},</if>
			<if test="receiptor != null and receiptor != ''">receiptor = #{receiptor},</if>
			<if test="state != null and state != ''">state = #{state},</if>
		</set>
		where id = #{id}
	</update>
	
	<!-- 通用的设置条件的查询SQL语句 -->
	<sql id="paramsSQL">
		<where>
			<if test=" sampleIds != null and sampleIds != '' ">
				and sampleIds = #{sampleIds}
			</if>
			<if test=" sampleIdsLike != null and sampleIdsLike != '' ">
				and sampleIds like concat(concat('%', #{sampleIdsLike, jdbcType=VARCHAR}),'%')
			</if>
			
			<if test=" sampleNums != null and sampleNums != '' ">
				and sampleNums = #{sampleNums}
			</if>
			<if test=" updateTime != null">
				and updateTime = #{updateTime}
			</if>
			
			<if test=" sampleNumsLike != null and sampleNumsLike != '' ">
				and sampleNums like concat(concat('%', #{sampleNumsLike, jdbcType=VARCHAR}),'%')
			</if>
			
			<if test=" checkeds != null and checkeds != '' ">
				and checkeds = #{ checkeds }
			</if>
			<if test=" checkedsLike != null and checkedsLike != '' ">
				and checkeds like concat(concat('%', #{checkedsLike, jdbcType=VARCHAR}),'%')
			</if>
			<if test=" name != null and name != '' ">
				and name = #{ name }
			</if>
			<if test=" nameLike != null and nameLike != '' ">
				and name like concat(concat('%', #{nameLike, jdbcType=VARCHAR}),'%')
			</if>
			<if test=" nameLikeOrId != null and nameLikeOrId != '' ">
				and name like concat(concat('%', #{nameLikeOrId, jdbcType=VARCHAR}),'%')
				or id = #{nameLikeOrId}
			</if>
			<if test=" remark != null and remark != '' ">
				and remark = #{ remark }
			</if>
			<if test=" userId != null and userId != '' ">
				and userId = #{ userId }
			</if>
			<if test=" state != null and state != '' ">
				and state = #{state}
			</if>
		</where>
	</sql>
	
</mapper>